<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="Magento\Payment\Gateway\Data\Quote\QuoteAdapter" type="Payoneer\OpenPaymentGateway\Gateway\QuoteAdapter" />
    <preference for="Payoneer\OpenPaymentGateway\Api\PayoneerNotificationRepositoryInterface" type="Payoneer\OpenPaymentGateway\Model\PayoneerNotificationRepository" />
    <preference for="Payoneer\OpenPaymentGateway\Api\Data\NotificationInterface" type="Payoneer\OpenPaymentGateway\Model\PayoneerNotification" />

    <!-- Payment Method Facade configuration -->
    <virtualType name="PayoneerFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Payoneer\OpenPaymentGateway\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Payoneer\OpenPaymentGateway\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayoneerValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="PayoneerConfig" type="Payoneer\OpenPaymentGateway\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Payoneer\OpenPaymentGateway\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Information block -->
    <type name="Payoneer\OpenPaymentGateway\Block\Info">
        <arguments>
            <argument name="config" xsi:type="object">PayoneerConfig</argument>
        </arguments>
    </type>

    <!-- Payoneer Client -->
    <type name="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="logger" xsi:type="object">PayoneerPaymentLogger</argument>
        </arguments>
    </type>

    <!-- Payoneer Transaction Service -->
    <type name="Payoneer\OpenPaymentGateway\Model\TransactionService">
        <arguments>
            <argument name="config" xsi:type="object">PayoneerConfig</argument>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </type>

    <type name="Payoneer\OpenPaymentGateway\Model\ListUpdateTransactionService">
        <arguments>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </type>

    <!-- Payoneer Transaction Order Updater -->
    <type name="Payoneer\OpenPaymentGateway\Model\TransactionOrderUpdater">
        <arguments>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </type>

    <!-- Payoneer Adminhtml Transaction Service -->
    <type name="Payoneer\OpenPaymentGateway\Model\Adminhtml\TransactionService">
        <arguments>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </type>

    <!-- Commands infrastructure -->
    <virtualType name="PayoneerCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">PayoneerAuthorizeCommand</item>
                <item name="capture" xsi:type="string">PayoneerCaptureCommand</item>
                <item name="refund" xsi:type="string">PayoneerRefundCommand</item>
                <item name="authorize_cancel" xsi:type="string">PayoneerCancelAuthorizationCommand</item>
                <item name="hosted" xsi:type="string">PayoneerListCommand</item>
                <item name="embedded" xsi:type="string">PayoneerListCommand</item>
                <item name="list_capture" xsi:type="string">PayoneerListCaptureCommand</item>
                <item name="list_fetch" xsi:type="string">PayoneerListFetchCommand</item>
                <item name="list_update" xsi:type="string">PayoneerListUpdateCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List command -->
    <virtualType name="PayoneerListCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayoneerListRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">PayoneerListTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerClientList</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Request -->
    <virtualType name="PayoneerListRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="base_request" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\BaseRequestDataBuilder</item>
                <item name="customer" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\CustomerDataBuilder</item>
                <item name="addresses" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\AddressDataBuilder</item>
                <item name="items" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\ItemsDataBuilder</item>
                <item name="payment" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\PaymentDataBuilder</item>
                <item name="style" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\StyleDataBuilder</item>
                <item name="preselection" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\PreselectionBuilder</item>
                <item name="callback" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\CallBackDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Transfer Factory -->
    <virtualType name="PayoneerListTransferFactory" type="Payoneer\OpenPaymentGateway\Gateway\Http\TransferFactory">
        <arguments>
            <argument name="method" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::METHOD_POST</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Client -->
    <virtualType name="PayoneerClientList" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::LIST</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Update Command -->
    <virtualType name="PayoneerListUpdateCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayoneerListUpdateRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">PayoneerListUpdateTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerListUpdateClient</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Update Request Builder -->
    <virtualType name="PayoneerListUpdateRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="base_request" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\BaseRequestDataBuilder</item>
                <item name="customer" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\CustomerDataBuilder</item>
                <item name="addresses" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\AddressDataBuilder</item>
                <item name="items" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\ItemsDataBuilder</item>
                <item name="payment" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\PaymentDataBuilder</item>
                <item name="callback" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\CallBackDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Update Transfer Factory -->
    <virtualType name="PayoneerListUpdateTransferFactory" type="Payoneer\OpenPaymentGateway\Gateway\Http\TransferFactory">
        <arguments>
            <argument name="method" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::METHOD_PUT</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Update Client -->
    <virtualType name="PayoneerListUpdateClient" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::LIST_UPDATE</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Capture Command -->
    <virtualType name="PayoneerListCaptureCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayoneerListCaptureRequest</argument>
            <argument name="transferFactory" xsi:type="object">PayoneerCaptureTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerClientListCapture</argument>
            <argument name="handler" xsi:type="object">PayoneerCaptureResponseHandler</argument>
            <argument name="validator" xsi:type="object">PayoneerListCaptureResponseValidator</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer capture Transfer Factory -->
    <virtualType name="PayoneerCaptureTransferFactory" type="Payoneer\OpenPaymentGateway\Gateway\Http\ListCaptureTransferFactory">
        <arguments>
            <argument name="method" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::METHOD_POST</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Capture Request -->
    <virtualType name="PayoneerListCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="adminTransactionId" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\AdminTransactionIDDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Capture Client -->
    <virtualType name="PayoneerClientListCapture" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::LIST_CAPTURE</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Capture Response Handler -->
    <virtualType name="PayoneerCaptureResponseHandler" type="Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler">
        <arguments>
            <argument name="additionalInfoKey" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::ADDITIONAL_INFO_KEY_CAPTURE_RESPONSE</argument>
            <argument name="actionSuccessResponseKey" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::AUTH_CAPTURE_STATUS_NODE</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Capture Response Validator -->
    <virtualType name="PayoneerListCaptureResponseValidator" type="Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator">
        <arguments>
            <argument name="successStatusCode" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator::CAPTURE_STATUS</argument>
            <argument name="skipValidation" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>

    <!-- Magento Authorize Command -->
    <virtualType name="PayoneerAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Request\TransactionIDDataBuilder</argument>
            <argument name="transferFactory" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Http\MagentoTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerClientAuthorize</argument>
            <argument name="handler" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Response\ResponseHandler</argument>
            <argument name="validator" xsi:type="object">PayoneerAuthorizeResponseValidator</argument>
        </arguments>
    </virtualType>

    <!-- Magento Authorize Client -->
    <virtualType name="PayoneerClientAuthorize" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::AUTHORIZE</argument>
        </arguments>
    </virtualType>

    <!-- Magento Authorize Response Validator -->
    <virtualType name="PayoneerAuthorizeResponseValidator" type="Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator">
        <arguments>
            <argument name="skipValidation" xsi:type="boolean">true</argument>
        </arguments>
    </virtualType>

    <!-- Magento Capture Command -->
    <virtualType name="PayoneerCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Request\TransactionIDDataBuilder</argument>
            <argument name="transferFactory" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Http\MagentoTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerClientAuthorizeCapture</argument>
            <argument name="handler" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Response\ResponseHandler</argument>
            <argument name="validator" xsi:type="object">PayoneerCaptureResponseValidator</argument>
        </arguments>
    </virtualType>

    <!-- Magento Capture Client -->
    <virtualType name="PayoneerClientAuthorizeCapture" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::CAPTURE</argument>
        </arguments>
    </virtualType>

    <!-- Magento Capture Response Validator -->
    <virtualType name="PayoneerCaptureResponseValidator" type="Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator">
        <arguments>
            <argument name="skipValidation" xsi:type="boolean">true</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Fetch command -->
    <virtualType name="PayoneerListFetchCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayoneerListFetchRequest</argument>
            <argument name="transferFactory" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Http\ListFetchTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerListFetchClient</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer List Fetch Request -->
    <virtualType name="PayoneerListFetchRequest" type="PayoneerListCaptureRequest">
    </virtualType>

    <!-- Payoneer List Fetch Client -->
    <virtualType name="PayoneerListFetchClient" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::LIST_FETCH</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund command -->
    <virtualType name="PayoneerRefundCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayoneerRefundRequest</argument>
            <argument name="validator" xsi:type="object">PayoneerRefundResponseValidator</argument>
            <argument name="handler" xsi:type="object">PayoneerRefundResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">PayoneerRefundTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerRefundClient</argument>
            <argument name="errorMessageMapper" xsi:type="object">Magento\Payment\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund Transfer Factory -->
    <virtualType name="PayoneerRefundTransferFactory" type="Payoneer\OpenPaymentGateway\Gateway\Http\RefundTransferFactory">
        <arguments>
            <argument name="method" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Config\Config::METHOD_POST</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund Response Validator -->
    <virtualType name="PayoneerRefundResponseValidator" type="Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator">
        <arguments>
            <argument name="successStatusCode" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator::REFUND_PAID_OUT_STATUS</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund Request -->
    <virtualType name="PayoneerRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="adminTransactionId" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\AdminTransactionIDDataBuilder</item>
                <item name="payment" xsi:type="string">Payoneer\OpenPaymentGateway\Gateway\Request\PaymentDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund Client -->
    <virtualType name="PayoneerRefundClient" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::REFUND</argument>
        </arguments>
    </virtualType>

    <!-- Payoneer Refund Response Handler -->
    <virtualType name="PayoneerRefundResponseHandler" type="Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler">
        <arguments>
            <argument name="additionalInfoKey" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::ADDITIONAL_INFO_KEY_REFUND_RESPONSE</argument>
            <argument name="transactionType" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::REFUND_TXN_TYPE</argument>
        </arguments>
    </virtualType>

    <!-- Cancel deferred(Authorization) Command -->
    <virtualType name="PayoneerCancelAuthorizationCommand" type="Payoneer\OpenPaymentGateway\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Request\AdminTransactionIDDataBuilder</argument>
            <argument name="validator" xsi:type="object">PayoneerCancelAuthorizationResponseValidator</argument>
            <argument name="handler" xsi:type="object">PayoneerAuthCancelResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">Payoneer\OpenPaymentGateway\Gateway\Http\Authorization\CancellationTransferFactory</argument>
            <argument name="client" xsi:type="object">PayoneerClientAuthorizationCancellation</argument>
        </arguments>
    </virtualType>

    <!-- Cancel Deferred(Authorization) Response Validator -->
    <virtualType name="PayoneerCancelAuthorizationResponseValidator" type="Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator">
        <arguments>
            <argument name="successStatusCode" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Validator\ResponseValidator::AUTH_CANCEL_PENDING_STATUS</argument>
        </arguments>
    </virtualType>

    <!-- Cancel Deferred(Authorization) Client -->
    <virtualType name="PayoneerClientAuthorizationCancellation" type="Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client">
        <arguments>
            <argument name="operation" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Http\Client\Client::AUTHORIZATION_CANCEL</argument>
        </arguments>
    </virtualType>

    <!-- Cancel Deferred(Authorization) Response Handler -->
    <virtualType name="PayoneerAuthCancelResponseHandler" type="Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler">
        <arguments>
            <argument name="additionalInfoKey" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::ADDITIONAL_INFO_KEY_AUTH_CANCEL_RESPONSE</argument>
            <argument name="actionSuccessResponseKey" xsi:type="const">Payoneer\OpenPaymentGateway\Gateway\Response\PayoneerResponseHandler::AUTH_CANCEL_STATUS_NODE</argument>
        </arguments>
    </virtualType>

    <!--
        Ading the pool to the command manager to auto execute the
        commands for the default actions.
        eg: execute the refund action when the credit memo is
        created from the admin side etc...
    -->
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="payoneer" xsi:type="string">PayoneerCommandManager</item>
            </argument>
        </arguments>
    </type>

    <virtualType name="PayoneerCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PayoneerCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Value Handlers Infrastructure -->
    <virtualType name="PayoneerValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayoneerConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PayoneerConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PayoneerConfig</argument>
        </arguments>
    </virtualType>

    <!-- Logger -->
    <virtualType name="PayoneerLoggerHandler" type="\Payoneer\OpenPaymentGateway\Logger\Handler">
        <arguments>
            <argument name="fileName" xsi:type="string">/var/log/payoneer.log</argument>
        </arguments>
    </virtualType>

    <virtualType name="PayoneerLogger" type="\Monolog\Logger">
        <arguments>
            <argument name="name" xsi:type="string">payoneer</argument>
            <argument name="handlers" xsi:type="array">
                <item name="payoneer" xsi:type="object">PayoneerLoggerHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PayoneerPaymentLogger" type="Payoneer\OpenPaymentGateway\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">PayoneerConfig</argument>
            <argument name="logger" xsi:type="object">PayoneerLogger</argument>
        </arguments>
    </virtualType>

    <virtualType name="PayoneerNotificationLoggerHandler" type="\Payoneer\OpenPaymentGateway\Logger\Handler">
        <arguments>
            <argument name="fileName" xsi:type="string">/var/log/payoneer_notification.log</argument>
        </arguments>
    </virtualType>

    <type name="Payoneer\OpenPaymentGateway\Logger\NotificationLogger">
        <arguments>
            <argument name="name" xsi:type="string">payoneer_notification</argument>
            <argument name="handlers"  xsi:type="array">
                <item name="system" xsi:type="object">PayoneerNotificationLoggerHandler</item>
            </argument>
        </arguments>
    </type>
</config>
